const apiUrl="https://api.quizpoly.xyz",formatAns=e=>e.trim().replace(/\s+correct+$/g,""),formatText=e=>e.replace(/ \n\r/g,"\n").replace(/\n\r/g,"\n").replace(/\r/g,"\n").replace(/\n\n/g,"\n").replace(/Â /g," ");let open=window.XMLHttpRequest.prototype.open,send=window.XMLHttpRequest.prototype.send;function openReplacement(e,t,r,n,a){return this._url=t,open.apply(this,arguments)}function sendReplacement(e){return this.onreadystatechange&&(this._onreadystatechange=this.onreadystatechange),this.onreadystatechange=onReadyStateChangeReplacement,send.apply(this,arguments)}function onReadyStateChangeReplacement(){if(4==this.readyState&&this.responseURL.includes("problem_check")&&submit(JSON.parse(this.response)),this._onreadystatechange)return this._onreadystatechange.apply(this,arguments)}function parseHTML(e){return(new DOMParser).parseFromString(e,"text/html")}async function addQuiz(e){try{var t=document.querySelector(".course-name").innerText.split(" - ")[0];const n=await fetch(apiUrl+"/cms",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({subjectName:t,quizzes:e}),credentials:"include"});var r=await n.json();console.debug(r.message)}catch(e){console.log(e)}}function submit(e){if(e.contents){const t=parseHTML(e.contents.replace(/allowfullscreen="true"\/>/g,'allowfullscreen="true"/></iframe>')),r=Array.from(t.querySelectorAll("div.poly")),n=Array.from(t.querySelectorAll("div.wrapper-problem-response"));if(r.length!==n.length)throw new Error("quesel and ansel not compare");qaEle=r.map((e,t)=>[e,n[t]]),addQuiz(qaEle.map(([e,t])=>{const r=e.querySelector(".poly-body");var n=r.querySelector("img"),a=r.querySelector("audio"),e=r.querySelector("a");const o=r.querySelector("iframe");a=formatText(`${r.textContent.trim()}${n?`\n${n.outerHTML}`:""}${a?`\n${a.outerHTML}`:""}${e?`\n${e.outerHTML}`:""}${o?`\n${o.outerHTML.replace(/iframe/g,"div")}`:""}`);let l="";e=t.querySelectorAll("input[checked=true]");if(!t.querySelector(".correct"))return{q:null,a:null};if(e&&e.length)l=1<e.length?Array.from(e).map(e=>formatText(formatAns(e.parentNode.innerText))):formatText(formatAns(e[0].parentNode.innerText));else{const s=t.querySelector("div.correct > input");s&&(l=s.getAttribute("value"))}return{q:a,a:l}}).filter(e=>e.q&&e.a))}}window.XMLHttpRequest.prototype.open=openReplacement,window.XMLHttpRequest.prototype.send=sendReplacement;